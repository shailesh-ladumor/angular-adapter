{"version":3,"file":"flatfile-angular.mjs","sources":["../../../projects/angular-adapter/src/lib/flatfile-button.component.ts","../../../projects/angular-adapter/src/lib/flatfile-adapter.module.ts","../../../projects/angular-adapter/src/public-api.ts","../../../projects/angular-adapter/src/flatfile-angular.ts"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\n\nimport { flatfileImporter, IEvents, IFlatfileImporter } from '@flatfile/sdk';\n\n@Component({\n  selector: 'flatfile-button',\n  template: `\n    <button (click)=\"launch()\" [disabled]=\"!isImporterLoaded\">\n      <div #ref [class.hide]=\"!isImporterLoaded\">\n        <ng-content></ng-content>\n      </div>\n      <span *ngIf=\"!ref && !ref.innerHTML.trim() && isImporterLoaded\"\n        >ðŸ”¼ Upload with Flatfile</span\n      >\n      <span *ngIf=\"!isImporterLoaded\">\n        ðŸ…§ Failed to Load Flatfile Importer\n      </span>\n    </button>\n  `,\n  styles: [\n    `\n      .hide {\n        display: none;\n      }\n    `,\n  ],\n})\nexport class FlatfileButtonComponent implements OnInit, OnDestroy {\n  @Input() token: string;\n  @Input() mountUrl?: string;\n  @Input() apiUrl?: string;\n  @Output() onInit = new EventEmitter<IEvents['init']>();\n  @Output() onUpload = new EventEmitter<IEvents['upload']>();\n  @Output() onLaunch = new EventEmitter<IEvents['launch']>();\n  @Output() onClose = new EventEmitter<IEvents['close']>();\n  @Output() onComplete = new EventEmitter<IEvents['complete']>();\n  @Output() onError = new EventEmitter<IEvents['error']>();\n\n  @ViewChild('ref', { read: ElementRef, static: true }) ref: ElementRef;\n\n  isImporterLoaded = true;\n\n  private flatfileImporter: IFlatfileImporter;\n\n  public ngOnInit(): void {\n    if (!this.token) {\n      console.error(\n        'ðŸ“¥ Flatfile Importer ERROR - \"token\" missing via @Input()'\n      );\n      this.isImporterLoaded = false;\n      return;\n    }\n\n    if (typeof flatfileImporter === 'undefined') {\n      console.log('ðŸ“¥ Flatfile Importer ERROR - importer failed to load');\n      this.isImporterLoaded = false;\n      return;\n    }\n\n    this.flatfileImporter = flatfileImporter(this.token, {\n      ...(this.mountUrl ? { mountUrl: this.mountUrl } : {}),\n      ...(this.apiUrl ? { apiUrl: this.apiUrl } : {}),\n    });\n\n    this.flatfileImporter.on('init', (res) => this.onInit.next(res));\n    this.flatfileImporter.on('upload', (res) => this.onUpload.next(res));\n    this.flatfileImporter.on('launch', (res) => this.onLaunch.next(res));\n    this.flatfileImporter.on('close', (res) => this.onClose.next(res));\n    this.flatfileImporter.on('complete', (res) => this.onComplete.next(res));\n  }\n\n  public ngOnDestroy(): void {\n    this.flatfileImporter.close();\n  }\n\n  public launch(): void {\n    this.flatfileImporter.launch().catch((e: Error) => {\n      this.onError.next({ error: e });\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlatfileButtonComponent } from './flatfile-button.component';\n\n@NgModule({\n  declarations: [FlatfileButtonComponent],\n  imports: [CommonModule],\n  exports: [FlatfileButtonComponent],\n})\nexport class FlatfileAdapterModule {}\n","/**\n * @note Public API Surface of angular-adapter\n */\n\nimport {\n  flatfileImporter,\n  IFlatfileImporter,\n  IUnsafeGenerateTokenOptions,\n} from '@flatfile/sdk';\n\nexport * from './lib/flatfile-adapter.module';\nexport * from './lib/flatfile-button.component';\nexport * from './lib/interfaces';\n\nexport { flatfileImporter, IFlatfileImporter, IUnsafeGenerateTokenOptions };\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}